name: Python pipeline

on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"
  workflow_dispatch:
  workflow_call:

jobs:
  SourceAnalysis:
    runs-on: ubuntu-latest
    steps:
      # Source Stage
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check Quality
        uses: Jasviers/actions/source-analysis/quality-checks@v1
        with:
          languaje: python

      - name: SonarQubeScan
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=jasviers_${{ github.event.repository.name }}
            -Dsonar.organization=jasviers
            -Dsonar.host.url=https://sonarcloud.io
            -Dsonar.branch.name=${{ github.ref_name }}

      - name: Install python dependencies
        run: pip install -r requirements.txt

      - name: Install Snyk
        run: npm install -g snyk

      - name: Authenticate Snyk
        run: snyk auth ${{ secrets.SNYK_TOKEN }}

      - name: Snyk Check
        run: snyk code test --sarif > snyk-code.sarif || true

      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk-code.sarif

      - name: Trivy Scan
        uses: aquasecurity/trivy-action@master
        continue-on-error: false

  BuildAndTest:
    runs-on: ubuntu-latest
    needs: SourceAnalysis
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run Unit Tests and Coverage
        run: |
          if [ -d test ] || [ -d tests ]; then
            pytest --cov=.
          fi

          - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@master

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@master
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@master
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@master
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "${{ steps.meta.outputs.tags }}"
          format: "template"
          template: "@/contrib/sarif.tpl"
          output: "trivy-results.sarif"
          severity: "CRITICAL,HIGH"

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: "trivy-results.sarif"
